# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sensor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, hardware: str=None, nombre: str=None, latitud: float=None, longitud: float=None, ubicacion: str=None, estatus: int=None):  # noqa: E501
        """Sensor - a model defined in Swagger

        :param id: The id of this Sensor.  # noqa: E501
        :type id: int
        :param hardware: The hardware of this Sensor.  # noqa: E501
        :type hardware: str
        :param nombre: The nombre of this Sensor.  # noqa: E501
        :type nombre: str
        :param latitud: The latitud of this Sensor.  # noqa: E501
        :type latitud: float
        :param longitud: The longitud of this Sensor.  # noqa: E501
        :type longitud: float
        :param ubicacion: The ubicacion of this Sensor.  # noqa: E501
        :type ubicacion: str
        :param estatus: The estatus of this Sensor.  # noqa: E501
        :type estatus: int
        """
        self.swagger_types = {
            'id': int,
            'hardware': str,
            'nombre': str,
            'latitud': float,
            'longitud': float,
            'ubicacion': str,
            'estatus': int
        }

        self.attribute_map = {
            'id': 'id',
            'hardware': 'hardware',
            'nombre': 'nombre',
            'latitud': 'latitud',
            'longitud': 'longitud',
            'ubicacion': 'ubicacion',
            'estatus': 'estatus'
        }

        self._id = id
        self._hardware = hardware
        self._nombre = nombre
        self._latitud = latitud
        self._longitud = longitud
        self._ubicacion = ubicacion
        self._estatus = estatus

    @classmethod
    def from_dict(cls, dikt) -> 'Sensor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sensor of this Sensor.  # noqa: E501
        :rtype: Sensor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Sensor.

          # noqa: E501

        :return: The id of this Sensor.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Sensor.

          # noqa: E501

        :param id: The id of this Sensor.
        :type id: int
        """

        self._id = id

    @property
    def hardware(self) -> str:
        """Gets the hardware of this Sensor.

          # noqa: E501

        :return: The hardware of this Sensor.
        :rtype: str
        """
        return self._hardware

    @hardware.setter
    def hardware(self, hardware: str):
        """Sets the hardware of this Sensor.

          # noqa: E501

        :param hardware: The hardware of this Sensor.
        :type hardware: str
        """

        self._hardware = hardware

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Sensor.

          # noqa: E501

        :return: The nombre of this Sensor.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Sensor.

          # noqa: E501

        :param nombre: The nombre of this Sensor.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def latitud(self) -> float:
        """Gets the latitud of this Sensor.

          # noqa: E501

        :return: The latitud of this Sensor.
        :rtype: float
        """
        return self._latitud

    @latitud.setter
    def latitud(self, latitud: float):
        """Sets the latitud of this Sensor.

          # noqa: E501

        :param latitud: The latitud of this Sensor.
        :type latitud: float
        """

        self._latitud = latitud

    @property
    def longitud(self) -> float:
        """Gets the longitud of this Sensor.

          # noqa: E501

        :return: The longitud of this Sensor.
        :rtype: float
        """
        return self._longitud

    @longitud.setter
    def longitud(self, longitud: float):
        """Sets the longitud of this Sensor.

          # noqa: E501

        :param longitud: The longitud of this Sensor.
        :type longitud: float
        """

        self._longitud = longitud

    @property
    def ubicacion(self) -> str:
        """Gets the ubicacion of this Sensor.

          # noqa: E501

        :return: The ubicacion of this Sensor.
        :rtype: str
        """
        return self._ubicacion

    @ubicacion.setter
    def ubicacion(self, ubicacion: str):
        """Sets the ubicacion of this Sensor.

          # noqa: E501

        :param ubicacion: The ubicacion of this Sensor.
        :type ubicacion: str
        """

        self._ubicacion = ubicacion

    @property
    def estatus(self) -> int:
        """Gets the estatus of this Sensor.

          # noqa: E501

        :return: The estatus of this Sensor.
        :rtype: int
        """
        return self._estatus

    @estatus.setter
    def estatus(self, estatus: int):
        """Sets the estatus of this Sensor.

          # noqa: E501

        :param estatus: The estatus of this Sensor.
        :type estatus: int
        """

        self._estatus = estatus
